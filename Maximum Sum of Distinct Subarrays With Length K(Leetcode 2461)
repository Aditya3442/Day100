class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        long sum= 0;
        long res= 0;
        int start= 0;
        int end = 0;
        HashMap<Integer, Integer> numToIndex = new HashMap<>();
        while (end < nums.length) {
            int num= nums[end];
            int lastOccurrence = numToIndex.getOrDefault(num, -1);
            while (start<= lastOccurrence || end - start + 1 > k) {
                sum-= nums[start];
                start++;
            }
            numToIndex.put(num, end);
            sum+= nums[end];
            if (end -start + 1 == k) {
                res= Math.max(res,sum);
            }
            end++;
        }
        return res;
    }
}
